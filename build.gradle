import groovy.json.JsonSlurper
import ru.pearx.jnome.generator.tasks.StripTask

/*buildscript {
    repositories {
        maven {
            url uri('Generator/build/repo')
        }
    }
    dependencies {
        classpath project(':Jnome:Generator')
    }
}*/

group 'ru.pearx.jnome'
version '1.0-SNAPSHOT'

apply plugin: 'java'
apply plugin: "jnome-generator"

sourceCompatibility = 1.8

repositories {
    mavenCentral()
}
dependencies {

}
sourceSets {
    autogen {
        java {
            srcDir "src/autogen/java"
        }
    }
}

File autogen = file("$buildDir/autogen")
File preprocessed = file("$autogen/preprocessed.h")
File stripped = file("$autogen/stripped.h")
List<String> includes = new JsonSlurper().parseText(preprocessing_include_directories)

task mkdirs() {
    autogen.mkdirs()
}

task preprocess(type: Exec) {
    setExecutable(gcc_executable)
    List<String> args = ["-E", "${preprocessing_input_file}"];
    for(String s : includes)
    {
        args.add("-I")
        args.add("${s}")
    }
    args.add("-o")
    args.add(preprocessed.toString())
    setArgs(args)
}

task strip(type: StripTask) {
    input = preprocessed
    output = stripped
    whitelistFiles = includes
}

task generate() {

}
preprocess.dependsOn(mkdirs)
strip.dependsOn(preprocess)
generate.dependsOn(strip)
build.dependsOn(generate)